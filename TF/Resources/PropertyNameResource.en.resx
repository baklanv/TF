<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutMe" xml:space="preserve">
    <value>About me</value>
  </data>
  <data name="Announcement" xml:space="preserve">
    <value>Announcement</value>
  </data>
  <data name="BirthDate" xml:space="preserve">
    <value>Birth date</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CommentatorId" xml:space="preserve">
    <value>Commentator</value>
  </data>
  <data name="CreateDate" xml:space="preserve">
    <value>Create date</value>
  </data>
  <data name="Degree" xml:space="preserve">
    <value>Degree</value>
  </data>
  <data name="DepartmentId" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Discord" xml:space="preserve">
    <value>Discord link</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>EndDate</value>
  </data>
  <data name="Faculty" xml:space="preserve">
    <value>Faculty</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First name</value>
  </data>
  <data name="Gender" xml:space="preserve">
    <value>Gender</value>
  </data>
  <data name="GitHub" xml:space="preserve">
    <value>GitHub link</value>
  </data>
  <data name="HeadId" xml:space="preserve">
    <value>Head</value>
  </data>
  <data name="HireDate" xml:space="preserve">
    <value>Hire date</value>
  </data>
  <data name="InfoCategoryId" xml:space="preserve">
    <value>Information category</value>
  </data>
  <data name="InfoSectionId" xml:space="preserve">
    <value>Information section</value>
  </data>
  <data name="LastActive" xml:space="preserve">
    <value>Date of last active status</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last name</value>
  </data>
  <data name="LevelId" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="LinkName" xml:space="preserve">
    <value>Link name</value>
  </data>
  <data name="LinkUrl" xml:space="preserve">
    <value>Link</value>
  </data>
  <data name="MaritalStatus" xml:space="preserve">
    <value>Marital status</value>
  </data>
  <data name="MiddleName" xml:space="preserve">
    <value>Middle name</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="OfficeId" xml:space="preserve">
    <value>Office</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone number</value>
  </data>
  <data name="PositionId" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="RoleId" xml:space="preserve">
    <value>Account role</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Specialization</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>Start date</value>
  </data>
  <data name="State" xml:space="preserve">
    <value>State</value>
  </data>
  <data name="Subject" xml:space="preserve">
    <value>Subject</value>
  </data>
  <data name="Telegram" xml:space="preserve">
    <value>Telegram link</value>
  </data>
  <data name="TempFileIds" xml:space="preserve">
    <value>Pinned files</value>
  </data>
  <data name="TempPreviewImageKey" xml:space="preserve">
    <value>Preview image</value>
  </data>
  <data name="TrendId" xml:space="preserve">
    <value>Trend</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="UpdateDate" xml:space="preserve">
    <value>Update date</value>
  </data>
  <data name="UniversityName" xml:space="preserve">
    <value>University name</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Company</value>
  </data>
  <data name="ExperienceSpecialization" xml:space="preserve">
    <value>Specialization</value>
  </data>
  <data name="Activity" xml:space="preserve">
    <value>Activity</value>
  </data>
  <data name="ExperienceStartDate" xml:space="preserve">
    <value>Start date of employment</value>
  </data>
  <data name="ExperienceEndDate" xml:space="preserve">
    <value>End date of employment</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="ExecutionType" xml:space="preserve">
    <value>Execution type</value>
  </data>
  <data name="Executors" xml:space="preserve">
    <value>Executors</value>
  </data>
  <data name="FlowItemType" xml:space="preserve">
    <value>Flow item type</value>
  </data>
  <data name="Estimation" xml:space="preserve">
    <value>Estimation</value>
  </data>
  <data name="IsRequired" xml:space="preserve">
    <value>Is required phase</value>
  </data>
  <data name="SigningRequired" xml:space="preserve">
    <value>Signing required</value>
  </data>
  <data name="Phases" xml:space="preserve">
    <value>Phases</value>
  </data>
  <data name="Route" xml:space="preserve">
    <value>Route</value>
  </data>
  <data name="Links" xml:space="preserve">
    <value>Links</value>
  </data>
  <data name="FlowCreationInstruction" xml:space="preserve">
    <value>Instructions for creating a route</value>
  </data>
  <data name="ExecutionGroups" xml:space="preserve">
    <value>Execution groups</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="DepartmentEmployees" xml:space="preserve">
    <value>Department employees</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Document type</value>
  </data>
  <data name="EmployeeFirstName" xml:space="preserve">
    <value>Employee first name</value>
  </data>
  <data name="ParentId" xml:space="preserve">
    <value>Parent record</value>
  </data>
  <data name="PublichserId" xml:space="preserve">
    <value>Publisher</value>
  </data>
  <data name="StartDateTime" xml:space="preserve">
    <value>Start date and time</value>
  </data>
  <data name="AddresseeFirstName" xml:space="preserve">
    <value>Addressee name</value>
  </data>
  <data name="AddresseeId" xml:space="preserve">
    <value>Addressee</value>
  </data>
  <data name="CategoryId" xml:space="preserve">
    <value>Category</value>
  </data>
  <data name="PublishDate" xml:space="preserve">
    <value>Pablish date</value>
  </data>
  <data name="PublishTime" xml:space="preserve">
    <value>Publish time</value>
  </data>
  <data name="UpdaterId" xml:space="preserve">
    <value>Updater</value>
  </data>
  <data name="IsHidden" xml:space="preserve">
    <value>Is hidden for users</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="PhotoCount" xml:space="preserve">
    <value>Number of photos</value>
  </data>
  <data name="PostedDate" xml:space="preserve">
    <value>Posted date</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="Volume" xml:space="preserve">
    <value>Volume</value>
  </data>
  <data name="EmployeeId" xml:space="preserve">
    <value>Employee</value>
  </data>
  <data name="TrendEmployees" xml:space="preserve">
    <value>Employees</value>
  </data>
  <data name="FlowId" xml:space="preserve">
    <value>Flow Id</value>
  </data>
  <data name="InformationActionType" xml:space="preserve">
    <value>Information action type</value>
  </data>
  <data name="InformationActionName" xml:space="preserve">
    <value>Information action name</value>
  </data>
  <data name="FlowName" xml:space="preserve">
    <value>Flow name</value>
  </data>
  <data name="Order" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Check" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="InfoSectionOrder" xml:space="preserve">
    <value>Order</value>
  </data>
  <data name="Main rules for compiling a process {0}/5" xml:space="preserve">
    <value>Main rules for compiling a process {0}/5</value>
  </data>
</root>